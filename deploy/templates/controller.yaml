apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
    spec:
      enableServiceLinks: false
      serviceAccountName: {{ .Release.Name }}
      volumes:
        - name: tls
          secret:
            secretName: {{ .Release.Name }}-webhook-tls
        - name: tmp
          emptyDir:
            { }
      containers:
        - name: {{ .Release.Name }}
          image: '{{ .Values.image.repository }}:{{ required "image.tag is empty" .Values.image.tag }}'
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsUser: 101
            runAsGroup: 101
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - mountPath: /tls/tls.crt
              name: tls
              subPath: cert
            - mountPath: /tls/tls.key
              name: tls
              subPath: key
            - mountPath: /tmp
              name: tmp
          env:
            - name: WEBHOOK_CERT_DIR
              value: /tls
          ports:
            - containerPort: 9443
              name: https
            - containerPort: 8081
              name: healthz
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    app: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 443
      targetPort: https
  type: ClusterIP